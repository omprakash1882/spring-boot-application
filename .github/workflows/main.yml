name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # This will trigger the workflow for any tag creation
  # workflow_dispatch:

jobs:
  # build-and-push:
  #   runs-on: ubuntu-latest

  #   steps:
  #     # Check out the repository
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     # Extract the tag name from GitHub ref
  #     - name: Extract GitHub Tag
  #       run: echo "IMAGE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

  #     # Debugging step to verify the extracted tag
  #     # - name: Debug GitHub Tag
  #     #   run: echo "Docker Image Tag: $IMAGE_TAG"

  #     # Set up Java (Maven)
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'

  #     # Build the Maven project
  #     - name: Build with Maven
  #       run: mvn clean package -DskipTests

  #     # Log in to Docker Hub
  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     # Build and push the Docker image
  #     - name: Build and Push Docker Image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         push: true
  #         tags: |
  #           ${{ secrets.DOCKERHUB_USERNAME }}/myjava:latest
  #           ${{ secrets.DOCKERHUB_USERNAME }}/myjava:${{ env.IMAGE_TAG }}
      

  #     # Optional: Post-build cleanup (if needed)
  #     - name: Post-build cleanup
  #       run: docker image prune -f
  deploy-to-gke:
    runs-on: ubuntu-latest
    # needs: build-and-push
    # if: github.event_name == 'workflow_dispatch'  # Ensures manual trigger only
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate with GKE
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Set up kubectl
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: vibrant-victory-452605-p3

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials cluster-1 --zone us-central1-c --project vibrant-victory-452605-p3
      - name: Deploy to GKE
        run: |
          kubectl set image deployment/nginx nginx=redis
          kubectl rollout status deployment/nginx
