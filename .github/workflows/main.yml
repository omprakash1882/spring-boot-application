# name: Build and Push Docker Image

# on:
#   push:
#     branches:
#       - main  # Trigger on pushes to the main branch
#   pull_request:
#     branches:
#       - main  # Optional: Trigger on pull requests to the main branch

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       # Check out the repository
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # Set up Java (Maven)
#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'

#       # Build the Maven project
#       - name: Build with Maven
#         run: mvn clean package -DskipTests

#       # Log in to Docker Hub
#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       # Build and push the Docker image
#       - name: Build and Push Docker Image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           push: true
#           tags: |
#             ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest
#             ${{ secrets.DOCKERHUB_USERNAME }}/myapp:${{ github.sha }}

name: Build
on:
  push:
    branches:
      - sonar # the name of your main branch
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
